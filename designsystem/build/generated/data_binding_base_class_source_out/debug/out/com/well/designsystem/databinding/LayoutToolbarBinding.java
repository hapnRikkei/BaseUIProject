// Generated by view binder compiler. Do not edit!
package com.well.designsystem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.well.designsystem.R;
import com.well.designsystem.view.CustomTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutToolbarBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final View dividerToolbarView;

  @NonNull
  public final Toolbar toolbarView;

  @NonNull
  public final CustomTextView tvTitleSelect;

  private LayoutToolbarBinding(@NonNull RelativeLayout rootView, @NonNull View dividerToolbarView,
      @NonNull Toolbar toolbarView, @NonNull CustomTextView tvTitleSelect) {
    this.rootView = rootView;
    this.dividerToolbarView = dividerToolbarView;
    this.toolbarView = toolbarView;
    this.tvTitleSelect = tvTitleSelect;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutToolbarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutToolbarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_toolbar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutToolbarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.divider_toolbar_view;
      View dividerToolbarView = ViewBindings.findChildViewById(rootView, id);
      if (dividerToolbarView == null) {
        break missingId;
      }

      id = R.id.toolbar_view;
      Toolbar toolbarView = ViewBindings.findChildViewById(rootView, id);
      if (toolbarView == null) {
        break missingId;
      }

      id = R.id.tvTitleSelect;
      CustomTextView tvTitleSelect = ViewBindings.findChildViewById(rootView, id);
      if (tvTitleSelect == null) {
        break missingId;
      }

      return new LayoutToolbarBinding((RelativeLayout) rootView, dividerToolbarView, toolbarView,
          tvTitleSelect);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
